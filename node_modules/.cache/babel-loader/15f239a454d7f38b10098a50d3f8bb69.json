{"ast":null,"code":"import { key, baseUrl } from '../utils';\nexport const FETCH_MOVIES_PENDING = 'FETCH_MOVIES_PENDING';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\n\nfunction fetchMoviesPending() {\n  return {\n    type: FETCH_MOVIES_PENDING\n  };\n}\n\nfunction fetchMoviesSuccess(movies) {\n  return {\n    type: FETCH_MOVIES_SUCCESS,\n    movies: movies\n  };\n}\n\nfunction fetchMoviesError(error) {\n  return {\n    type: FETCH_MOVIES_ERROR,\n    error: error\n  };\n}\n\nexport function fetchMovies() {\n  return dispatch => {\n    dispatch(fetchMoviesPending());\n    fetch(\"\".concat(baseUrl, \"/movie/popular?api_key=\").concat(key, \"&language=en-US&page=35\")).then(res => res.json()).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch(fetchMoviesSuccess(res));\n      return res;\n    }).catch(error => {\n      dispatch(fetchMoviesError(error));\n    });\n  };\n}","map":{"version":3,"sources":["/home/nilufar/Desktop/movies/src/actions/fetchMovies.js"],"names":["key","baseUrl","FETCH_MOVIES_PENDING","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_ERROR","fetchMoviesPending","type","fetchMoviesSuccess","movies","fetchMoviesError","error","fetchMovies","dispatch","fetch","then","res","json","catch"],"mappings":"AAAA,SAASA,GAAT,EAAcC,OAAd,QAA6B,UAA7B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;;AAEP,SAASC,kBAAT,GAA8B;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH;;AAED,SAASK,kBAAT,CAA4BC,MAA5B,EAAoC;AAChC,SAAO;AACHF,IAAAA,IAAI,EAAEH,oBADH;AAEHK,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH;;AAED,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHJ,IAAAA,IAAI,EAAEF,kBADH;AAEHM,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH;;AAED,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACAQ,IAAAA,KAAK,WAAIZ,OAAJ,oCAAqCD,GAArC,6BAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACL,KAAR,EAAe;AACX,cAAOK,GAAG,CAACL,KAAX;AACH;;AACDE,MAAAA,QAAQ,CAACL,kBAAkB,CAACQ,GAAD,CAAnB,CAAR;AACA,aAAOA,GAAP;AACH,KARL,EASKE,KATL,CASWP,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACH,gBAAgB,CAACC,KAAD,CAAjB,CAAR;AACH,KAXL;AAYH,GAdD;AAeH","sourcesContent":["import { key, baseUrl } from '../utils'\n\nexport const FETCH_MOVIES_PENDING = 'FETCH_MOVIES_PENDING';\nexport const FETCH_MOVIES_SUCCESS = 'FETCH_MOVIES_SUCCESS';\nexport const FETCH_MOVIES_ERROR = 'FETCH_MOVIES_ERROR';\n\nfunction fetchMoviesPending() {\n    return {\n        type: FETCH_MOVIES_PENDING\n    }\n}\n\nfunction fetchMoviesSuccess(movies) {\n    return {\n        type: FETCH_MOVIES_SUCCESS,\n        movies: movies\n    }\n}\n\nfunction fetchMoviesError(error) {\n    return {\n        type: FETCH_MOVIES_ERROR,\n        error: error\n    }\n}\n\nexport function fetchMovies() {\n    return dispatch => {\n        dispatch(fetchMoviesPending());\n        fetch(`${baseUrl}/movie/popular?api_key=${key}&language=en-US&page=35`)\n            .then(res => res.json())\n            .then(res => {\n                if (res.error) {\n                    throw (res.error);\n                }\n                dispatch(fetchMoviesSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(fetchMoviesError(error));\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}