{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nvar _jsxFileName = \"/home/nilufar/Desktop/movies/src/components/movies.js\";\nimport React, { Component } from 'react';\nimport { key, baseUrl } from '../utils';\nimport play from '../img/play-button.png';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/fetchMovies';\nimport { bindActionCreators } from 'redux';\n\nclass Movies extends Component {\n  componentWillMount() {\n    this.props.fetchMovies();\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          products = _this$props.products;\n    console.log(products, \"products\");\n    return React.createElement(\"div\", {\n      className: \"movie-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      gutter: [32, 32],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"hi\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.error,\n  movies: state.movies,\n  pending: state.pending\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchMovies: fetchMovies\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["/home/nilufar/Desktop/movies/src/components/movies.js"],"names":["React","Component","key","baseUrl","play","connect","fetchMovies","bindActionCreators","Movies","componentWillMount","props","render","error","products","console","log","mapStateToProps","state","movies","pending","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,OAAd,QAA6B,UAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,WAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKD,KAD3B;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACSC,QADT,eACSA,QADT;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAAsB,UAAtB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAoBD;;AA5B4B;;AA8B/B,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,KAAK,EAAEK,KAAK,CAACL,KADmB;AAEhCM,EAAAA,MAAM,EAAED,KAAK,CAACC,MAFkB;AAGhCC,EAAAA,OAAO,EAAEF,KAAK,CAACE;AAHiB,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAId,kBAAkB,CAAC;AACxDD,EAAAA,WAAW,EAAEA;AAD2C,CAAD,EAEtDe,QAFsD,CAAzD;;AAKA,eAAehB,OAAO,CACpBW,eADoB,EACJI,kBADI,CAAP,CAEbZ,MAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport { key, baseUrl } from '../utils';\nimport play from '../img/play-button.png';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/fetchMovies'\nimport { bindActionCreators } from 'redux';\n\nclass Movies extends Component {\n  componentWillMount() {\n    this.props.fetchMovies()\n  }\n  \n  render() {\n    const {  error, products } = this.props\n    console.log(products, \"products\")\n    return (\n      <div className=\"movie-section\">\n        <Row gutter={[32, 32]} >\n          hi\n        {/* {data && data.results.map(({ title, backdrop_path, release_date, id }) =>\n          <Col span={6} className=\"movie-cart\" onClick={() => handleClick(id)}>\n            <div className=\"movie-img\" style={{ background: backdrop_path === null ? \"#eee\" : `url(\"https://image.tmdb.org/t/p/w342${backdrop_path}\")` }} ></div>\n            <img src={play} />\n            <div class=\"movie-caption\">\n              <h3 class=\"title\">{title}</h3>\n              <div class=\"movie-info\">\n                <span class=\"movie-year\">{release_date.substr(0, 4)}</span>\n                <span class=\"movie-ganre\"></span>\n              </div>\n            </div>\n          </Col>\n        )} */}\n        </Row>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  error: state.error,\n  movies: state.movies,\n  pending: state.pending\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchMovies: fetchMovies\n}, dispatch)\n\n\nexport default connect(\n  mapStateToProps,mapDispatchToProps\n)(Movies);\n"]},"metadata":{},"sourceType":"module"}