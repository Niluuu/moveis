{"ast":null,"code":"import \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nvar _jsxFileName = \"/home/nilufar/Desktop/my projects/movies/src/components/movies.js\";\nimport React, { Component } from \"react\";\nimport play from \"../img/play-button.png\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, getMovie } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMoveData = id => {\n      this.props.dispatch(getMovie(id));\n    };\n  }\n\n  componentWillMount() {\n    this.props.dispatch(fetchMovies());\n  }\n\n  render() {\n    const _this$props = this.props,\n          movies = _this$props.movies,\n          movie = _this$props.movie;\n    console.log(\"movie\", movie);\n    return React.createElement(\"div\", {\n      className: \"movie-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      gutter: [32, 32],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, movies && movies.map(movie => React.createElement(MovieList, Object.assign({}, movie, {\n      key: movie.id,\n      getMoveData: () => this.getMoveData(movie.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst MovieList = ({\n  id,\n  title,\n  backdrop_path,\n  release_date,\n  getMoveData\n}) => {\n  return React.createElement(_Col, {\n    span: 6,\n    className: \"movie-cart\",\n    onClick: getMoveData,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"watch/\".concat(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-img\",\n    style: {\n      background: backdrop_path === null ? \"#eee\" : \"url(\\\"https://image.tmdb.org/t/p/w342\".concat(backdrop_path, \"\\\")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: play,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"movie-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    class: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    class: \"movie-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"movie-year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, release_date.substr(0, 4)), React.createElement(\"span\", {\n    class: \"movie-ganre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Movies);","map":{"version":3,"sources":["/home/nilufar/Desktop/my projects/movies/src/components/movies.js"],"names":["React","Component","play","connect","fetchMovies","getMovie","Link","Movies","getMoveData","id","props","dispatch","componentWillMount","render","movies","movie","console","log","map","MovieList","title","backdrop_path","release_date","background","substr","mapStateToProps","state","error","moviesReducer","pending","getMovieReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport play from \"../img/play-button.png\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, getMovie } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nclass Movies extends Component {\n  componentWillMount() {\n    this.props.dispatch(fetchMovies());\n  }\n\n  getMoveData = id => {\n    this.props.dispatch(getMovie(id));\n  };\n\n  render() {\n    const { movies, movie } = this.props;\n    console.log(\"movie\", movie);\n\n    return (\n      <div className=\"movie-section\">\n        <Row gutter={[32, 32]}>\n          {movies &&\n            movies.map(movie => (\n              <MovieList\n                {...movie}\n                key={movie.id}\n                getMoveData={() => this.getMoveData(movie.id)}\n              />\n            ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst MovieList = ({ id, title, backdrop_path, release_date, getMoveData }) => {\n  return (\n    <Col span={6} className=\"movie-cart\" onClick={getMoveData} key={id}>\n      <Link to={`watch/${id}`}>\n        <div\n          className=\"movie-img\"\n          style={{\n            background:\n              backdrop_path === null\n                ? \"#eee\"\n                : `url(\"https://image.tmdb.org/t/p/w342${backdrop_path}\")`\n          }}\n        ></div>\n        <img src={play} />\n        <div class=\"movie-caption\">\n          <h3 class=\"title\">{title}</h3>\n          <div class=\"movie-info\">\n            <span class=\"movie-year\">{release_date.substr(0, 4)}</span>\n            <span class=\"movie-ganre\"></span>\n          </div>\n        </div>\n      </Link>\n    </Col>\n  );\n};\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}