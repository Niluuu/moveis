{"ast":null,"code":"import _slicedToArray from \"/home/nilufar/Desktop/movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nilufar/Desktop/movies/src/components/search.js\";\nimport React, { useState } from 'react';\nimport SearchImg from '../img/search.png';\nimport { key, baseUrl } from '../utils';\nexport default function Search() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  function handleChange(e) {\n    setValue(e.target.value);\n    search(key, e.target.value);\n  }\n\n  async function search(key, val) {\n    if (val.length > 0) {\n      try {\n        let response = await fetch(\"\".concat(baseUrl, \"/search/movie?api_key=\").concat(key, \"&language=en-US&query=\").concat(val, \"&page=1&include_adult=false\"));\n        const data = await response.json();\n        setData(data);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"search-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"inner-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: SearchImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"search_result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, value.length > 0 && data && data.results.map(({\n    title,\n    backdrop_path\n  }) => React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"movie-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-cart\",\n    style: {\n      background: backdrop_path === null ? \"#eee\" : \"url(\\\"https://image.tmdb.org/t/p/w342\".concat(backdrop_path, \"\\\")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    class: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, title))))));\n}","map":{"version":3,"sources":["/home/nilufar/Desktop/movies/src/components/search.js"],"names":["React","useState","SearchImg","key","baseUrl","Search","value","setValue","data","setData","handleChange","e","target","search","val","length","response","fetch","json","err","console","error","results","map","title","backdrop_path","background"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,UAA7B;AAGA,eAAe,SAASC,MAAT,GAAkB;AAAA,oBACLJ,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACxBK,KADwB;AAAA,QACjBC,QADiB;;AAAA,qBAEPN,QAAQ,CAAC,IAAD,CAFD;AAAA;AAAA,QAExBO,IAFwB;AAAA,QAElBC,OAFkB;;AAK/B,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACAO,IAAAA,MAAM,CAACV,GAAD,EAAMQ,CAAC,CAACC,MAAF,CAASN,KAAf,CAAN;AACD;;AAED,iBAAeO,MAAf,CAAsBV,GAAtB,EAA2BW,GAA3B,EAAgC;AAC9B,QAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,WAAIb,OAAJ,mCAAoCD,GAApC,mCAAgEW,GAAhE,iCAA1B;AACA,cAAMN,IAAI,GAAG,MAAMQ,QAAQ,CAACE,IAAT,EAAnB;AACAT,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAJD,CAIE,OAAOW,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEjB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,QAA/B;AAAwC,IAAA,QAAQ,EAAEQ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACS,MAAN,GAAe,CAAf,IAAoBP,IAApB,IAA4BA,IAAI,CAACc,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAC5C;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAED,aAAa,KAAK,IAAlB,GAAyB,MAAzB,kDAAyEA,aAAzE;AAAd,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBD,KAAnB,CAFF,CADF,CAD2B,CAD/B,CAPF,CADF;AAoBD","sourcesContent":["import React, { useState } from 'react'\nimport SearchImg from '../img/search.png'\nimport { key, baseUrl } from '../utils';\n\n\nexport default function Search() {\n  const [value, setValue] = useState(\"\")\n  const [data, setData] = useState(null)\n\n\n  function handleChange(e) {\n    setValue(e.target.value)\n    search(key, e.target.value)\n  }\n\n  async function search(key, val) {\n    if (val.length > 0) {\n      try {\n        let response = await fetch(`${baseUrl}/search/movie?api_key=${key}&language=en-US&query=${val}&page=1&include_adult=false`);\n        const data = await response.json();\n        setData(data)\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  return (\n    <div className=\"search-bar\">\n      <div class=\"inner-search\">\n        <span >\n          <img src={SearchImg}/>\n        </span>\n        <input type=\"text\" placeholder=\"Search\" onChange={handleChange} />\n      </div>\n      <div class=\"search_result\">\n        {value.length > 0 && data && data.results.map(({ title, backdrop_path, }) =>\n          <a href=\"\">\n            <div class=\"movie-caption\">\n              <div className=\"movie-cart\" style={{ background: backdrop_path === null ? \"#eee\" : `url(\"https://image.tmdb.org/t/p/w342${backdrop_path}\")` }} ></div>\n              <h3 class=\"title\">{title}</h3>\n            </div>\n          </a>\n        )}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}