{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nvar _jsxFileName = \"/home/nilufar/Desktop/my projects/movies/src/components/movies.js\";\nimport React, { Component } from \"react\";\nimport play from \"../img/play-button.png\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, getMovie } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport MovieList from \"../containers/movie\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMoveData = id => {\n      this.props.dispatch(getMovie(id));\n    };\n  }\n\n  componentWillMount() {\n    this.props.dispatch(fetchMovies());\n  }\n\n  render() {\n    const _this$props = this.props,\n          movies = _this$props.movies,\n          movie = _this$props.movie;\n    console.log(\"movie\", movie);\n    return React.createElement(\"div\", {\n      className: \"movie-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      gutter: [32, 32],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, movies && movies.map(movie => React.createElement(MovieList, Object.assign({}, movie, {\n      key: movie.id,\n      getMoveData: () => this.getMoveData(movie.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Movies);","map":{"version":3,"sources":["/home/nilufar/Desktop/my projects/movies/src/components/movies.js"],"names":["React","Component","play","connect","fetchMovies","getMovie","Link","MovieList","Movies","getMoveData","id","props","dispatch","componentWillMount","render","movies","movie","console","log","map","mapStateToProps","state","error","moviesReducer","pending","getMovieReducer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,YAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAK7BQ,WAL6B,GAKfC,EAAE,IAAI;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBP,QAAQ,CAACK,EAAD,CAA5B;AACD,KAP4B;AAAA;;AAC7BG,EAAAA,kBAAkB,GAAG;AACnB,SAAKF,KAAL,CAAWC,QAAX,CAAoBR,WAAW,EAA/B;AACD;;AAMDU,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKH,KADxB;AAAA,UACCI,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,IACLA,MAAM,CAACI,GAAP,CAAWH,KAAK,IACd,oBAAC,SAAD,oBACMA,KADN;AAEE,MAAA,GAAG,EAAEA,KAAK,CAACN,EAFb;AAGE,MAAA,WAAW,EAAE,MAAM,KAAKD,WAAL,CAAiBO,KAAK,CAACN,EAAvB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAFJ,CADF,CADF;AAcD;;AA3B4B;;AA8B/B,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,KAAK,EAAED,KAAK,CAACE,aAAN,CAAoBD,KADK;AAEhCP,EAAAA,MAAM,EAAEM,KAAK,CAACE,aAAN,CAAoBR,MAFI;AAGhCS,EAAAA,OAAO,EAAEH,KAAK,CAACE,aAAN,CAAoBC,OAHG;AAIhCR,EAAAA,KAAK,EAAEK,KAAK,CAACI,eAAN,CAAsBT;AAJG,CAAL,CAA7B;;AAOA,eAAeb,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col } from \"antd\";\nimport play from \"../img/play-button.png\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies, getMovie } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport MovieList from \"../containers/movie\";\nclass Movies extends Component {\n  componentWillMount() {\n    this.props.dispatch(fetchMovies());\n  }\n\n  getMoveData = id => {\n    this.props.dispatch(getMovie(id));\n  };\n\n  render() {\n    const { movies, movie } = this.props;\n    console.log(\"movie\", movie);\n\n    return (\n      <div className=\"movie-section\">\n        <Row gutter={[32, 32]}>\n          {movies &&\n            movies.map(movie => (\n              <MovieList\n                {...movie}\n                key={movie.id}\n                getMoveData={() => this.getMoveData(movie.id)}\n              />\n            ))}\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}